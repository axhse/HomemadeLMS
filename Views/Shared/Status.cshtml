@using HomemadeLMS.Models.Domain
@model ActionStatus
@{
	var title = Model switch
	{
		ActionStatus.NoAccess => "No Access",
		ActionStatus.NoPermission => "No Permission",
		ActionStatus.NotFound => "Not Found",
		_ => "Error",
	};
	var passwordFormatDesc = $"Ошибка — пароль должен быть от {Account.MinPasswordSize}"
						     + $" до {Account.MaxPasswordSize} символов";
	var statusDescription = Model switch
	{
		ActionStatus.InternalError => "Ошибка сервера",
		ActionStatus.InvalidFormData => "Форма содержит некорректные данные",
		ActionStatus.NoAccess => "Ресурс не доступен",
		ActionStatus.NoPermission => "Недостаточно разрешений",
		ActionStatus.NotFound => "Ресурс не существует",
		ActionStatus.NotSupported => "Действие не может быть выполнено",
		ActionStatus.UnknownError => "Неизвестная ошибка",

		ActionStatus.PasswordConfirmationError => "Ошибка — введенные пароли не совпадают",
		ActionStatus.PasswordInvalidFormat => passwordFormatDesc,

		ActionStatus.HasNoManagerToken => "Токен не установлен",
		ActionStatus.InvalidManagerToken => "Токен отличается от введенного",

		ActionStatus.InvalidConfirmationUrl => "Ссылка подтверждения невалидна или устарела (ссылки действуют 1 час)",
		ActionStatus.PasswordIsNotCorrect => "Неправильный пароль",
		ActionStatus.UsernameInvalidFormat => "Некорректный username",
		ActionStatus.UserNotFound => "Пользователь не найден",

		_ => "",
	};

	ViewData["Title"] = title;

	if (Model == ActionStatus.InvalidConfirmationUrl
		|| Model == ActionStatus.PasswordIsNotCorrect
		|| Model == ActionStatus.UsernameInvalidFormat
		|| Model == ActionStatus.UserNotFound)
	{
		var navbarMenu = new LinkGroup();
		navbarMenu.Links.Add(new Link { Href = "/", Label = "Главная страница" });
		ViewData["NavbarMenu"] = navbarMenu;
	}
	else
	{
		ViewData["NavbarMenu"] = MenuBuilder.DefaultNavbarMenu;
	}
}

<h5 class="text-secondary fw-bold">@statusDescription</h5>
