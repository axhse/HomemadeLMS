@using HomemadeLMS.Models.Domain
@model CourseMemberAndObject<List<PersonalHomework>>
@{
	ViewData["Title"] = "Задания";
	ViewData["NavbarMenu"] = MenuBuilder.DefaultNavbarMenu;

	Model.Object.Sort(
		(first, second) => -first.Homework.CreationTime.CompareTo(second.Homework.CreationTime)
	);
}

<div class="col-12 col-md-10 col-lg-8 col-xl-6">
	@if (Model.CourseMember.CanEditHomeworks)
	{
		<form method="POST">
			<button type="submit" class="btn btn-secondary mt-1" name="actionCode" value="add-individual">
				+ Добавить индивидуальное задание
			</button>
			<button type="submit" class="btn btn-secondary mt-1" name="actionCode" value="add-team">
				+ Добавить командное задание
			</button>
			<div class="mt-5"></div>
		</form>
	}
	@foreach (var personalHomework in Model.Object)
	{
		var homework = personalHomework.Homework;
		var titleStyle = homework.IsDeadlineExpired ? "secondary" :
						  (personalHomework.HomeworkStatus.IsSubmitted ? "success" : "primary");

		<a class="link-card" href="/course/task?id=@homework.Id">
			<div class="card border-secondary">
				<div class="card-header text-@titleStyle">@homework.Title</div>
				@if (homework.Deadline is not null)
				{
					var deadlineMsk = ((DateTime)homework.Deadline).AddHours(DataUtils.MskHourOffset);
					<div class="card-body vertically-filled-div text-start">
						<pre class="card-text">Дедлайн: @deadlineMsk.ToString()</pre>
					</div>
				}
			</div>
		</a>
		<div class="mt-5"></div>
	}
	<a class="link-custom-secondary" href="/course?id=@Model.CourseId">Вернуться</a>
</div>
