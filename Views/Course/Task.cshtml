@using HomemadeLMS.Models.Domain
@model CoursePersonalObject<PersonalHomework>
@{
	ViewData["Title"] = "Задание";
	ViewData["NavbarMenu"] = MenuBuilder.DefaultNavbarMenu;

	var homework = Model.Object.Homework;
	var homeworkStatus = Model.Object.HomeworkStatus;
	List<LinkItem> links = new();
	if (homework.TaskUrl is not null && DataUtils.IsValuable(homework.TaskUrl))
	{
		links.Add(new() { Href = homework.TaskUrl, Label = "Cсылка на задание" });
	}
	if (homework.SubmitUrl is not null && DataUtils.IsValuable(homework.SubmitUrl))
	{
		links.Add(new() { Href = homework.SubmitUrl, Label = "Cсылка для сдачи задания" });
	}
	if (homework.ExtraUrl is not null && DataUtils.IsValuable(homework.ExtraUrl)
		&& homework.ExtraUrlLabel is not null && DataUtils.IsValuable(homework.ExtraUrlLabel))
	{
		links.Add(new() { Href = homework.ExtraUrl, Label = homework.ExtraUrlLabel });
	}
}

<div class="col-12 col-lg-8">
	@if (homeworkStatus.Mark is not null)
	{
		<div class="mb-4">
			<p class="fw-bold">Оценка: @homeworkStatus.Mark</p>
			@if (homeworkStatus.EvaluatorUsername is not null)
			{
				var username = homeworkStatus.EvaluatorUsername;
				var url = $"/course/member?courseId={Model.Course.Id}&username={username}";
				<p>Проверявший: <a href=@url>@username</a></p>
			}
		</div>
	}
	<p class="fw-bold">@homework.Title</p>
	@if (DataUtils.IsValuable(homework.Content))
	{
		<div class="mt-4" align="left">
			<pre class="pre-vertical">@homework.Content</pre>
		</div>
	}
	@if (links.Any())
	{
		<div class="mt-4">
			@foreach (var link in links)
			{
				<div class="my-1">
					<a href="@link.Href">@link.Label</a>
				</div>
			}
		</div>
	}
	@if (homework.Deadline is not null)
	{
		var deadlineMsk = ((DateTime)homework.Deadline).AddHours(DataUtils.MskHourOffset);
		<div class="mt-4">
			<p>Дедлайн: @deadlineMsk.ToString()</p>
		</div>
	}
	@if (Model.CourseMember.Role == CourseRole.Student)
	{
		var submitTime = homeworkStatus.SubmitTime;
		@if (homeworkStatus.IsSubmitted && submitTime is not null)
		{
			var username = homeworkStatus.SubmitUsername;
			var url = $"/course/member?courseId={Model.Course.Id}&username={username}";
			var submitTimeMsk = ((DateTime)submitTime).AddHours(DataUtils.MskHourOffset);
			<p>Отмечено выполненым: <a href=@url>@username</a> @submitTimeMsk.ToString()</p>
		}
		<form method="POST">
			<div class="mt-5">
				@if (homeworkStatus.IsSubmitted)
				{
					<button type="submit" class="btn btn-secondary" name="actionCode"
							value="mark-as-not-submitted">
						Отметить невыполненым
					</button>
				}
				else
				{
					<button type="submit" class="btn btn-success" name="actionCode"
							value="mark-as-submitted">
						Отметить выполненым
					</button>
				}
			</div>
		</form>
	}
	@if (Model.CourseMember.CanEditHomeworks)
	{
		<form method="POST">
			<div class="d-inline-flex mt-5">
				<div>
					<button type="submit" class="btn btn-secondary" name="actionCode" value="edit">
						Редактировать
					</button>
				</div>
				<div class="ms-4">
					<button type="submit" class="btn btn-danger" name="actionCode" value="delete">
						Удалить
					</button>
				</div>
			</div>
		</form>
	}
	<div class="mt-5">
		<a href="/course/tasks?courseId=@Model.Course.Id">Все задания</a>
	</div>
</div>
