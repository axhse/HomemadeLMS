@using HomemadeLMS.Models.Domain
@model MemberAndObject<PersonalHomework>
@{
	ViewData["Title"] = "Задание";
	ViewData["NavbarMenu"] = MenuBuilder.DefaultNavbarMenu;

	var homework = Model.Object.Homework;
	var homeworkStatus = Model.Object.HomeworkStatus;
	List<Link> links = new();
	if (homework.TaskUrl is not null && DataUtils.IsValuable(homework.TaskUrl))
	{
		links.Add(new() { Href = homework.TaskUrl, Label = "Cсылка на задание" });
	}
	if (homework.SubmitUrl is not null && DataUtils.IsValuable(homework.SubmitUrl))
	{
		links.Add(new() { Href = homework.SubmitUrl, Label = "Cсылка для сдачи задания" });
	}
	if (homework.ExtraUrl is not null && DataUtils.IsValuable(homework.ExtraUrl)
		&& homework.ExtraUrlLabel is not null && DataUtils.IsValuable(homework.ExtraUrlLabel))
	{
		links.Add(new() { Href = homework.ExtraUrl, Label = homework.ExtraUrlLabel });
	}
}

<div class="col-12 col-lg-8">
	@if (homeworkStatus.Mark is not null)
	{
		<label class="fw-bold">Оценка: @homeworkStatus.Mark</label>
		@if (homeworkStatus.EvaluatorUsername is not null)
		{
			var username = homeworkStatus.EvaluatorUsername;
			var url = $"/course/member?courseId={Model.CourseId}&username={username}";

			<label class="ms-5">(выставлена <a href=@url>@username</a>)</label>
		}
		<div class="mt-5"></div>
	}
	<h6>@homework.Title</h6>
	@if (DataUtils.IsValuable(homework.Content))
	{
		<div class="mt-4"></div>
		<div class="d-inline-flex" align="left">
			<pre class="pre-vertical">@homework.Content</pre>
		</div>
	}
	@if (links.Any())
	{
		<div class="mt-4"></div>
		@foreach (var link in links)
		{
			<div class="my-1"></div>
			<a href="@link.Href">@link.Label</a>
		}
	}
	@if (homework.Deadline is not null)
	{
		var deadlineMsk = ((DateTime)homework.Deadline).AddHours(DataUtils.MskHourOffset);

		<div class="mt-4"></div>
		<label>Дедлайн: @deadlineMsk.ToString()</label>
	}
	<div class="mt-4"></div>
	<label>@(homework.IsTeamwork ? "Командное задание" : "Индивидуальное задание")</label>
	@if (Model.Member.IsStudent)
	{
		<div class="mt-5"></div>
		@if (homeworkStatus.IsSubmitted && homeworkStatus.SubmitTime is not null)
		{
			var username = homeworkStatus.SubmitUsername;
			var url = $"/course/member?courseId={Model.CourseId}&username={username}";
			var submitTimeMsk = ((DateTime)homeworkStatus.SubmitTime).AddHours(DataUtils.MskHourOffset);

			<label>Отмечено выполненым: </label>
			@if (homework.IsTeamwork)
			{
				<a href=@url>@username</a>
			}
			<label> @submitTimeMsk.ToString()</label>
			<div class="mt-4"></div>
		}
		<form method="POST">
			@if (homeworkStatus.IsSubmitted)
			{
				<button type="submit" class="btn btn-secondary" name="actionCode"
						value="mark-as-not-submitted">
					Отметить невыполненым
				</button>
			}
			else
			{
				<button type="submit" class="btn btn-success" name="actionCode"
						value="mark-as-submitted">
					Отметить выполненым
				</button>
			}
		</form>
	}
	@if (Model.Member.IsTeacher)
	{
		<div class="mt-5"></div>
		<form method="POST">
			<a class="btn btn-secondary" href="/course/task/edit?id=@homework.Id">Редактировать</a>
			<button type="submit" class="btn btn-danger" name="actionCode" value="delete">
				Удалить
			</button>
		</form>
	}
	@if (Model.Member.IsAssistantOrTeacher)
	{
		<div class="mt-4"></div>
		<a href="/course/marks?taskId=@homework.Id">Оценки</a>
	}
	<div class="mt-5"></div>
	<a href="/course/tasks?courseId=@Model.CourseId">Все задания</a>
</div>
