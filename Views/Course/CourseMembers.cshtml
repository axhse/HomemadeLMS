@using HomemadeLMS.Models.Domain
@model CourseAndObject<List<CourseMember>>
@{
	ViewData["Title"] = "Участники";
	ViewData["NavbarMenu"] = MenuBuilder.DefaultNavbarMenu;

	var sortedRoles = new CourseRole[] {
		CourseRole.Teacher,
		CourseRole.Assistant,
		CourseRole.Student,
	};
}

<div class="col-12 col-md-10 col-lg-8 col-xl-6">
	@if (Model.IsCourseEditable)
	{
		<form method="POST">
			<button type="submit" class="btn btn-secondary" name="actionCode" value="add">
				Добавить
			</button>
			<button type="submit" class="btn btn-secondary" name="actionCode" value="remove">
				Удалить
			</button>
			<div class="mt-5"></div>
		</form>
	}
	@foreach (var role in sortedRoles) {
		var members = Model.Object.Where(member => member.Role == role);
		var roleName = role switch
		{
			CourseRole.Teacher => "Преподаватели",
			CourseRole.Assistant => "Ассистенты",
			CourseRole.Student => "Студенты",
			_ => string.Empty,
		};

		@if (members.Any()) {
			<label class="fw-bold">@roleName (@members.Count())</label>
			<div class="mt-3"></div>
			@foreach (var member in members) {
				var url = $"/course/member?courseId={Model.Course.Id}&username={member.Username}";

				<div></div>
				<a href=@url>@member.Username</a>
			}
			<div class="mt-5"></div>
		} 
	}
	<a class="link-custom-secondary" href="/course?id=@Model.Course.Id">Вернуться</a>
</div>
