@using HomemadeLMS.Models.Domain
@model CourseAndObject<List<MemberInfo>>
@{
	ViewData["Title"] = "Участники";
	ViewData["NavbarMenu"] = MenuBuilder.DefaultNavbarMenu;

	var sortedRoles = new CourseRole[] {
		CourseRole.Teacher,
		CourseRole.Assistant,
		CourseRole.Student,
	};
}

<div class="col-12 col-md-10 col-lg-8 col-xl-6">
	@if (Model.IsCourseEditable)
	{
		<a class="btn btn-secondary" href="/course/members/add?courseId=@Model.Course.Id">Добавить</a>
		<a class="btn btn-secondary" href="/course/members/remove?courseId=@Model.Course.Id">Удалить</a>
		<div class="mt-5"></div>
	}
	@foreach (var role in sortedRoles) {
		var allCurrentInfo = Model.Object.Where(info => info.Member.Role == role).ToList();
		allCurrentInfo.Sort(Comparators.MemberInfo);
		var roleName = role switch
		{
			CourseRole.Teacher => "Преподаватели",
			CourseRole.Assistant => "Ассистенты",
			CourseRole.Student => "Студенты",
			_ => string.Empty,
		};

		@if (allCurrentInfo.Any()) {
			<label class="fw-bold">@roleName (@allCurrentInfo.Count())</label>
			<div class="mt-3"></div>
			@foreach (var memberInfo in allCurrentInfo)
			{
				var member = memberInfo.Member;
				var name = memberInfo.Account?.Name;
				var url = $"/course/member?courseId={Model.Course.Id}&username={member.Username}";

				<div></div>
				@if (name is not null)
				{
					<label class="me-4">@name</label>
				}
				<a href=@url>@member.Username</a>
			}
			<div class="mt-5"></div>
		} 
	}
	<a class="link-custom-secondary" href="/course?id=@Model.Course.Id">Вернуться</a>
</div>
